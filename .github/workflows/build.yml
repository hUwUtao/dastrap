name: rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --verbose

      - name: Build example
        run: cargo build --example compile

      - name: Cache builds
        uses: actions/cache@v3
        with:
          path: target
          # key: ${{ runner.os }}-builds-${{ github.sha }}
          key: ${{ runner.os }}-builds

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rust-build-${{ matrix.os }}
          path: target/debug/

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: rust-build-${{ matrix.os }}
          path: target/debug

      - name: Make example executable
        if: matrix.os == 'ubuntu-latest'
        run: chmod +x target/debug/examples/compile

      - name: Run example
        run: target/debug/examples/compile
